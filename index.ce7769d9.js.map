{"mappings":"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","sources":["<anon>","src/index.ts","src/components/post-it/index.ts","src/pages/home/index.ts","src/state.ts"],"sourcesContent":["class $0e0ad7a6891aa4f7$var$PostIt extends HTMLElement {\n    constructor(){\n        super();\n        this.shadow = this.attachShadow({\n            mode: \"open\"\n        });\n    }\n    connectedCallback() {\n        this.title = this.getAttribute(\"title\") || \"\";\n        this.checked = this.hasAttribute(\"checked\");\n        this.id = this.getAttribute(\"id\") || \"\";\n        this.render();\n    }\n    render() {\n        this.shadow.innerHTML = `\r\n\t\t\t\t<div class=\"post-it__container\">\r\n\t\t\t\t\t\t<div class=\"post-it-block ${this.checked ? \"checked\" : \"\"}\">\r\n\t\t\t\t\t\t\t\t<div class=\"post-it-block__container\">\r\n\t\t\t\t\t\t\t\t\t  <h4 class=\"post-it-item ${this.checked ? \"checked\" : \"\"}\">${this.title}</h4>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"post-it-checkbox\" ${this.checked ? \"checked\" : \"\"}>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"post-it-trash-container\">\r\n\t\t\t\t\t\t\t\t\t\t<img src=\"https://cdn.discordapp.com/attachments/703284067696771083/1202480668018352158/trash-regular-24.png?ex=65cd9c64&is=65bb2764&hm=27a6504e352302e70c0c8d195c69fe04718d71531ff0c5d8f963eb84da5a19bb&\" alt=\"Trash Can Image\" class=\"trash-img\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t`;\n        const postItCheckbox = this.shadow.querySelector(\".post-it-checkbox\");\n        postItCheckbox?.addEventListener(\"click\", (e)=>{\n            const target = e.target;\n            const event = new CustomEvent(\"checkedChange\", {\n                detail: {\n                    id: this.id,\n                    checked: target.checked\n                }\n            });\n            this.dispatchEvent(event);\n        });\n        const postItBlock = this.shadow.querySelector(\".post-it-block\");\n        const postItTrashImage = this.shadow.querySelector(\".trash-img\");\n        postItBlock?.addEventListener(\"click\", ()=>{\n            postItBlock.classList.toggle(\"active\");\n            postItTrashImage?.classList.toggle(\"active\");\n            postItTrashImage?.addEventListener(\"click\", (e)=>{\n                postItBlock.remove();\n                const event = new CustomEvent(\"delete\", {\n                    detail: {\n                        id: this.id\n                    }\n                });\n                this.dispatchEvent(event);\n            });\n        });\n        const style = document.createElement(\"style\");\n        style.innerHTML = `\r\n\t\t.post-it-block {\r\n       min-height: 90px;\r\n\t\t\t overflow: hidden;\r\n       background-color: #FFF599;\r\n       border-radius: 4px;\r\n\t\t\t padding: 20px 12px;\r\n\t\t\t display: flex;\r\n\t\t\t flex-direction: column;\r\n\t\t\t justify-content: space-between;\r\n\t\t\t}\r\n\t\t\t.post-it-block.active {\r\n\t\t\t\tborder: 3px solid #000;\r\n\t\t\t}\r\n\t\t\t.post-it-block__container {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: space-between;\r\n\t\t\t}\r\n\t\t\t.post-it-item {\r\n\t\t\t\tmargin: 0;\r\n\t\t\t\tfont-size: 20px;\r\n\t\t\t\tmax-width: 80%;\r\n\t\t\t}\r\n\t\t\t.post-it-item.checked {\r\n\t\t\t\ttext-decoration: line-through;\r\n\t\t\t}\r\n\t\t\t.post-it-checkbox {\r\n\t\t\t\twidth: 25px;\r\n\t\t\t\theight: 25px;\r\n\t\t\t}\r\n\t\t\t.post-it-trash-container {\r\n\t\t\t\talign-self: end;\r\n\t\t\t}\r\n\t\t\t.trash-img {\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t\t.trash-img.active {\r\n\t\t\t\tdisplay: inherit;\r\n\t\t\t}\r\n\t\t\t`;\n        this.shadow.appendChild(style);\n    }\n}\ncustomElements.define(\"post-it\", $0e0ad7a6891aa4f7$var$PostIt);\n\n\nconst $0b89d474933103bc$export$ca000e230c0caa3e = {\n    data: {\n        tasks: []\n    },\n    listeners: [],\n    init () {\n        // localStorage.removeItem('state');\n        const savedState = localStorage.getItem(\"state\");\n        if (savedState) this.setState(JSON.parse(savedState));\n    },\n    getState () {\n        return this.data;\n    },\n    setState (newState) {\n        this.data = newState;\n        this.listeners.forEach((callback)=>callback());\n        console.log(\"nueva data\", this.data.tasks);\n        localStorage.setItem(\"state\", JSON.stringify(newState)); // Creo que solo con esta línea basta para que se guarde en el localStorage\n    },\n    subscribe (callback) {\n        this.listeners.push(callback);\n    },\n    getEnabledTasks () {\n        const currentState = this.getState();\n        return currentState.tasks.filter((t)=>!t.deleted);\n    },\n    addTask (task) {\n        const currentState = this.getState();\n        currentState.tasks.push(task);\n        this.setState(currentState);\n    },\n    moveTaskToBeggining (task) {\n        const currentState = this.getState();\n        const taskIndex = currentState.tasks.findIndex((t)=>t.id === task.id);\n        currentState.tasks.splice(taskIndex, 1);\n        currentState.tasks.unshift(task);\n        this.setState(currentState);\n    },\n    moveTaskToEnd (task) {\n        const currentState = this.getState();\n        const taskIndex = currentState.tasks.findIndex((t)=>t.id === task.id);\n        currentState.tasks.splice(taskIndex, 1);\n        currentState.tasks.push(task);\n        this.setState(currentState);\n    },\n    changeTaskStatus (taskId, checked) {\n        const currentState = this.getState();\n        /* taskId me está trayendo un string a pesar de ser un number, tuve que hacer el parseInt debido a eso */ const task = currentState.tasks.find((t)=>t.id === parseInt(taskId));\n        task.completed = checked;\n        this.setState(currentState);\n    },\n    deleteTask (taskId) {\n        const currentState = this.getState();\n        const task = currentState.tasks.find((t)=>t.id === parseInt(taskId));\n        task.deleted = true;\n        this.setState(currentState);\n    }\n};\n\n\nfunction $1610de69c571aaa7$export$a5e6865481338347(container) {\n    const div = document.createElement(\"div\");\n    div.innerHTML = `\r\n    <header class=\"header\"></header>\r\n    <div class=\"content-container\">\r\n      <main class=\"main\">\r\n        <h1 class=\"main__title\">Mis pendientes</h1>\r\n      </main>\r\n\r\n      <section class=\"form-container\">\r\n        <form class=\"post-it-form\">\r\n          <div class=\"post-it__form-input-container\">\r\n            <label for=\"form-input\" class=\"post-it-form__label\">Nuevo pendiente</label>\r\n            <input type=\"text\" name=\"text\" id=\"form-input\" class=\"post-it-form__input\" placeholder=\"Agreg\\xe1 un post-it\"\r\n              required>\r\n          </div>\r\n          <button class=\"post-it-form__button\">Agregar</button>\r\n        </form>\r\n      </section>\r\n\r\n      <section class=\"post-it__section\">\r\n      </section>\r\n    </div>\r\n  `;\n    const postItFormEl = div.querySelector(\".post-it-form\");\n    postItFormEl?.addEventListener(\"submit\", (e)=>{\n        e.preventDefault();\n        const form = e.target;\n        const currentState = (0, $0b89d474933103bc$export$ca000e230c0caa3e).getState();\n        const inputValue = form?.text.value;\n        const task = {\n            id: currentState.tasks.length + 1,\n            title: inputValue,\n            completed: false\n        };\n        (0, $0b89d474933103bc$export$ca000e230c0caa3e).addTask(task);\n        form.reset();\n    });\n    const postItSectionEl = div.querySelector(\".post-it__section\");\n    function createTasks(tasks) {\n        if (postItSectionEl) postItSectionEl.innerHTML = \"\";\n        for (const task of tasks){\n            const postIt = document.createElement(\"post-it\");\n            postIt.setAttribute(\"id\", task.id);\n            postIt.setAttribute(\"title\", task.title);\n            if (task.completed) postIt.setAttribute(\"checked\", \"true\");\n            postItSectionEl?.appendChild(postIt);\n            postIt.addEventListener(\"checkedChange\", (e)=>{\n                const event = e;\n                (0, $0b89d474933103bc$export$ca000e230c0caa3e).changeTaskStatus(event.detail.id, event.detail.checked);\n                if (event.detail.checked) (0, $0b89d474933103bc$export$ca000e230c0caa3e).moveTaskToEnd(task);\n                else (0, $0b89d474933103bc$export$ca000e230c0caa3e).moveTaskToBeggining(task);\n            });\n            postIt.addEventListener(\"delete\", (e)=>{\n                const event = e;\n                (0, $0b89d474933103bc$export$ca000e230c0caa3e).deleteTask(event.detail.id);\n            });\n        }\n    }\n    (0, $0b89d474933103bc$export$ca000e230c0caa3e).subscribe(()=>{\n        createTasks((0, $0b89d474933103bc$export$ca000e230c0caa3e).getEnabledTasks());\n    });\n    createTasks((0, $0b89d474933103bc$export$ca000e230c0caa3e).getEnabledTasks());\n    container.appendChild(div);\n}\n\n\n\n(function main() {\n    (0, $0b89d474933103bc$export$ca000e230c0caa3e).init();\n    const root = document.querySelector(\".root\");\n    (0, $1610de69c571aaa7$export$a5e6865481338347)(root);\n})();\n\n\n//# sourceMappingURL=index.ce7769d9.js.map\n","import './components/post-it';\r\nimport './pages/home';\r\nimport { initHomePage } from './pages/home';\r\nimport { state } from './state';\r\n\r\n(function main() {\r\n\tstate.init();\r\n\tconst root = document.querySelector('.root');\r\n\tinitHomePage(root);\r\n})();\r\n","class PostIt extends HTMLElement {\r\n\tshadow: ShadowRoot;\r\n\ttitle: string;\r\n\t// id: number; /* No entiendo por qué no me deja agregar un id tipo number */\r\n\tchecked: boolean;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.shadow = this.attachShadow({ mode: 'open' });\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t\tthis.title = this.getAttribute('title') || '';\r\n\t\tthis.checked = this.hasAttribute('checked');\r\n\t\tthis.id = this.getAttribute('id') || '';\r\n\r\n\t\tthis.render();\r\n\t}\r\n\r\n\trender() {\r\n\t\tthis.shadow.innerHTML = `\r\n\t\t\t\t<div class=\"post-it__container\">\r\n\t\t\t\t\t\t<div class=\"post-it-block ${this.checked ? 'checked' : ''}\">\r\n\t\t\t\t\t\t\t\t<div class=\"post-it-block__container\">\r\n\t\t\t\t\t\t\t\t\t  <h4 class=\"post-it-item ${this.checked ? 'checked' : ''}\">${this.title}</h4>\r\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"post-it-checkbox\" ${this.checked ? 'checked' : ''}>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"post-it-trash-container\">\r\n\t\t\t\t\t\t\t\t\t\t<img src=\"https://cdn.discordapp.com/attachments/703284067696771083/1202480668018352158/trash-regular-24.png?ex=65cd9c64&is=65bb2764&hm=27a6504e352302e70c0c8d195c69fe04718d71531ff0c5d8f963eb84da5a19bb&\" alt=\"Trash Can Image\" class=\"trash-img\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t`;\r\n\r\n\t\tconst postItCheckbox = this.shadow.querySelector('.post-it-checkbox');\r\n\t\tpostItCheckbox?.addEventListener('click', (e) => {\r\n\t\t\tconst target = e.target as HTMLInputElement;\r\n\t\t\tconst event = new CustomEvent('checkedChange', {\r\n\t\t\t\tdetail: {\r\n\t\t\t\t\tid: this.id,\r\n\t\t\t\t\tchecked: target.checked,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\tthis.dispatchEvent(event);\r\n\t\t});\r\n\r\n\t\tconst postItBlock = this.shadow.querySelector('.post-it-block');\r\n\t\tconst postItTrashImage = this.shadow.querySelector('.trash-img');\r\n\r\n\t\tpostItBlock?.addEventListener('click', () => {\r\n\t\t\tpostItBlock.classList.toggle('active');\r\n\t\t\tpostItTrashImage?.classList.toggle('active');\r\n\t\t\tpostItTrashImage?.addEventListener('click', (e) => {\r\n\t\t\t\tpostItBlock.remove();\r\n\t\t\t\tconst event = new CustomEvent('delete', {\r\n\t\t\t\t\tdetail: {\r\n\t\t\t\t\t\tid: this.id,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t\tthis.dispatchEvent(event);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tconst style = document.createElement('style');\r\n\t\tstyle.innerHTML = `\r\n\t\t.post-it-block {\r\n       min-height: 90px;\r\n\t\t\t overflow: hidden;\r\n       background-color: #FFF599;\r\n       border-radius: 4px;\r\n\t\t\t padding: 20px 12px;\r\n\t\t\t display: flex;\r\n\t\t\t flex-direction: column;\r\n\t\t\t justify-content: space-between;\r\n\t\t\t}\r\n\t\t\t.post-it-block.active {\r\n\t\t\t\tborder: 3px solid #000;\r\n\t\t\t}\r\n\t\t\t.post-it-block__container {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: space-between;\r\n\t\t\t}\r\n\t\t\t.post-it-item {\r\n\t\t\t\tmargin: 0;\r\n\t\t\t\tfont-size: 20px;\r\n\t\t\t\tmax-width: 80%;\r\n\t\t\t}\r\n\t\t\t.post-it-item.checked {\r\n\t\t\t\ttext-decoration: line-through;\r\n\t\t\t}\r\n\t\t\t.post-it-checkbox {\r\n\t\t\t\twidth: 25px;\r\n\t\t\t\theight: 25px;\r\n\t\t\t}\r\n\t\t\t.post-it-trash-container {\r\n\t\t\t\talign-self: end;\r\n\t\t\t}\r\n\t\t\t.trash-img {\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t\t.trash-img.active {\r\n\t\t\t\tdisplay: inherit;\r\n\t\t\t}\r\n\t\t\t`;\r\n\r\n\t\tthis.shadow.appendChild(style);\r\n\t}\r\n}\r\ncustomElements.define('post-it', PostIt);\r\n","import { state } from '../../state';\r\n\r\nexport function initHomePage(container) {\r\n\tconst div = document.createElement('div');\r\n\tdiv.innerHTML = `\r\n    <header class=\"header\"></header>\r\n    <div class=\"content-container\">\r\n      <main class=\"main\">\r\n        <h1 class=\"main__title\">Mis pendientes</h1>\r\n      </main>\r\n\r\n      <section class=\"form-container\">\r\n        <form class=\"post-it-form\">\r\n          <div class=\"post-it__form-input-container\">\r\n            <label for=\"form-input\" class=\"post-it-form__label\">Nuevo pendiente</label>\r\n            <input type=\"text\" name=\"text\" id=\"form-input\" class=\"post-it-form__input\" placeholder=\"Agregá un post-it\"\r\n              required>\r\n          </div>\r\n          <button class=\"post-it-form__button\">Agregar</button>\r\n        </form>\r\n      </section>\r\n\r\n      <section class=\"post-it__section\">\r\n      </section>\r\n    </div>\r\n  `;\r\n\r\n\tconst postItFormEl = div.querySelector('.post-it-form');\r\n\r\n\tpostItFormEl?.addEventListener('submit', (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst form = e.target as HTMLFormElement;\r\n\t\tconst currentState = state.getState();\r\n\t\tconst inputValue = form?.text.value;\r\n\t\tconst task = {\r\n\t\t\tid: currentState.tasks.length + 1,\r\n\t\t\ttitle: inputValue,\r\n\t\t\tcompleted: false,\r\n\t\t};\r\n\t\tstate.addTask(task);\r\n\t\tform.reset();\r\n\t});\r\n\r\n\tconst postItSectionEl = div.querySelector('.post-it__section');\r\n\tfunction createTasks(tasks) {\r\n\t\tif (postItSectionEl) postItSectionEl.innerHTML = '';\r\n\t\tfor (const task of tasks) {\r\n\t\t\tconst postIt = document.createElement('post-it');\r\n\t\t\tpostIt.setAttribute('id', task.id);\r\n\t\t\tpostIt.setAttribute('title', task.title);\r\n\t\t\tif (task.completed) postIt.setAttribute('checked', 'true');\r\n\t\t\tpostItSectionEl?.appendChild(postIt);\r\n\r\n\t\t\tpostIt.addEventListener('checkedChange', (e) => {\r\n\t\t\t\tconst event = e as any;\r\n\t\t\t\tstate.changeTaskStatus(event.detail.id, event.detail.checked);\r\n\t\t\t\tif (event.detail.checked) state.moveTaskToEnd(task);\r\n\t\t\t\telse state.moveTaskToBeggining(task);\r\n\t\t\t});\r\n\r\n\t\t\tpostIt.addEventListener('delete', (e) => {\r\n\t\t\t\tconst event = e as any;\r\n\t\t\t\tstate.deleteTask(event.detail.id);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tstate.subscribe(() => {\r\n\t\tcreateTasks(state.getEnabledTasks());\r\n\t});\r\n\r\n\tcreateTasks(state.getEnabledTasks());\r\n\r\n\tcontainer.appendChild(div);\r\n}\r\n","type taskType = {\r\n\tid: number;\r\n\ttitle: string;\r\n\tcompleted: boolean;\r\n\tdeleted?: boolean;\r\n};\r\n\r\nexport const state = {\r\n\tdata: {\r\n\t\ttasks: [] as taskType[],\r\n\t},\r\n\tlisteners: [],\r\n\tinit() {\r\n\t\t// localStorage.removeItem('state');\r\n\t\tconst savedState = localStorage.getItem('state');\r\n\t\tif (savedState) this.setState(JSON.parse(savedState));\r\n\t},\r\n\tgetState() {\r\n\t\treturn this.data;\r\n\t},\r\n\tsetState(newState) {\r\n\t\tthis.data = newState;\r\n\t\tthis.listeners.forEach((callback) => callback());\r\n\t\tconsole.log('nueva data', this.data.tasks);\r\n\t\tlocalStorage.setItem('state', JSON.stringify(newState)); // Creo que solo con esta línea basta para que se guarde en el localStorage\r\n\t},\r\n\tsubscribe(callback: (any) => any) {\r\n\t\tthis.listeners.push(callback);\r\n\t},\r\n\tgetEnabledTasks() {\r\n\t\tconst currentState = this.getState();\r\n\t\treturn currentState.tasks.filter((t: taskType) => !t.deleted);\r\n\t},\r\n\taddTask(task: taskType) {\r\n\t\tconst currentState = this.getState();\r\n\t\tcurrentState.tasks.push(task);\r\n\t\tthis.setState(currentState);\r\n\t},\r\n\tmoveTaskToBeggining(task: taskType) {\r\n\t\tconst currentState = this.getState();\r\n\t\tconst taskIndex = currentState.tasks.findIndex((t: taskType) => t.id === task.id);\r\n\t\tcurrentState.tasks.splice(taskIndex, 1);\r\n\t\tcurrentState.tasks.unshift(task);\r\n\t\tthis.setState(currentState);\r\n\t},\r\n\tmoveTaskToEnd(task: taskType) {\r\n\t\tconst currentState = this.getState();\r\n\t\tconst taskIndex = currentState.tasks.findIndex((t: taskType) => t.id === task.id);\r\n\t\tcurrentState.tasks.splice(taskIndex, 1);\r\n\t\tcurrentState.tasks.push(task);\r\n\t\tthis.setState(currentState);\r\n\t},\r\n\tchangeTaskStatus(taskId, checked: boolean) {\r\n\t\tconst currentState = this.getState();\r\n\t\t/* taskId me está trayendo un string a pesar de ser un number, tuve que hacer el parseInt debido a eso */\r\n\t\tconst task = currentState.tasks.find((t) => t.id === parseInt(taskId));\r\n\t\ttask.completed = checked;\r\n\t\tthis.setState(currentState);\r\n\t},\r\n\tdeleteTask(taskId) {\r\n\t\tconst currentState = this.getState();\r\n\t\tconst task = currentState.tasks.find((t) => t.id === parseInt(taskId));\r\n\t\ttask.deleted = true;\r\n\t\tthis.setState(currentState);\r\n\t},\r\n};\r\n"],"names":["$0e0ad7a6891aa4f7$var$PostIt","HTMLElement","constructor","shadow","attachShadow","mode","connectedCallback","title","getAttribute","checked","hasAttribute","id","render","innerHTML","postItCheckbox","querySelector","addEventListener","e","target","event","CustomEvent","detail","dispatchEvent","postItBlock","postItTrashImage","classList","toggle","remove","style","document","createElement","appendChild","customElements","define","$0b89d474933103bc$export$ca000e230c0caa3e","data","tasks","listeners","init","savedState","localStorage","getItem","setState","JSON","parse","getState","newState","forEach","callback","console","log","setItem","stringify","subscribe","push","getEnabledTasks","currentState","filter","t","deleted","addTask","task","moveTaskToBeggining","taskIndex","findIndex","splice","unshift","moveTaskToEnd","changeTaskStatus","taskId","find","parseInt","completed","deleteTask","container","div","postItFormEl","preventDefault","form","inputValue","text","value","length","reset","postItSectionEl","createTasks","postIt","setAttribute"],"version":3,"file":"index.ce7769d9.js.map"}